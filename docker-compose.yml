version: '3.8'

services:
  postgres:
    image: ankane/pgvector:latest
    container_name: agenticledger_db
    restart: unless-stopped

    environment:
      POSTGRES_DB: ${DB_NAME:-agenticledger_customer_db}
      POSTGRES_USER: ${DB_USER:-platform_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-CHANGE_ME_SECURE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"

    ports:
      - "${DB_PORT:-5432}:5432"

    volumes:
      # Persistent data
      - postgres_data:/var/lib/postgresql/data

      # Initialize database with schema
      - ./schema:/docker-entrypoint-initdb.d

      # Backups directory
      - ./backups:/backups

      # PostgreSQL config (optional)
      # - ./postgresql.conf:/etc/postgresql/postgresql.conf

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-platform_user} -d ${DB_NAME:-agenticledger_customer_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - agenticledger_network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agenticledger_pgadmin
    restart: unless-stopped

    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@agenticledger.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80

    ports:
      - "${PGADMIN_PORT:-5050}:80"

    volumes:
      - pgadmin_data:/var/lib/pgadmin

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - agenticledger_network

    # Comment out to disable pgAdmin
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  agenticledger_network:
    driver: bridge
